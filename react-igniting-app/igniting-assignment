1.What is `NPM`?
-> NPM is a package manager which is used to manage the packages in our code.

2.What is `Parcel/Webpack`? Why do we need it?
-> Pacel/Webpacks are Bundlers and Bundlers are packages.we use package manager when we want to use that bundlers.
-> we need parcel/webpack because of it our application runs on server , it compress our files into one line code,Tree shaking(remove unwanted code for optimising) it automatically refreshes the page means HMR and because of it our react application is running fast.
-> Bascially it give strength to our react application.

3.What is `.parcel-cache` ?
-> parcel caches the code all time.
-> when we run the application , a build is created.When we make any code chnage and save application another build is created which might take less time than the previous build
-> the reduction of time is called parcel-cache.

4.- What is `npx` ?
-> npx is tool which is used to execute the packages without installing them globally.

5.What is difference between `dependencies` vs `devDependencies`?
-> devdependenices is used specially for manage dependecies/packages for development purpose.
-> dependecies is used to manage packages/dependecies which are used in production purpose.

6.What is Tree Shaking?
->Tree shaking is a process to remove unwanted code that we don't use while developing the application.
-> it is a dead code elimanation technique that is applied when optimizing code.

7.What is Hot Module Replacement?
-> it will keep a track of updating file.
-> it used file watching algoritham to track all files which are changing and it tell server to reload.

8.List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
own words.
->1.compressing the code
->2.local server - create a server so earlier our code was on url after parcel came in picture it create server for us and our project is running on https:localhost.
->3.Tree shaking - process of removing unwanted code while developing the application
->4.HMR - Hot module replacement -> keep track of updating file and using file watching algorithem it keep track of updated code.
->5.parcel-cache - when we run the application a build is created and when we change something and after save the changes it do again build so reduction of time is due to cahce.Which make faster parcel build and faster developer expereience.

9.What is `.gitignore`? What should we add and not add into it?
-> the files which we dont want to push on github those files we add in gitignore , basically it tell git to ignore those files or folders.

10.What is the difference between `package.json` and `package-lock.json`?
-> package.json defines a app's dependencies and scripts.it shows general version range.
-> package-lock-json maintain excat versions of all dependecies/sub-dependecies, so all things are works same in all developers system.

11.Why should I not modify `package-lock.json`?
-> Because it's auto-generated by npm to lock exact versions of dependencies.

12.What is `node_modules` ? Is it a good idea to push that on git?
-> node modules contains all the dependecies and packages which is needed to run our application.
-> No, its not good idea to push nodemosule on git because its is so heavy and large and already define in package.json so if someone want it then they can easily get it from do npm install.

13.What is the `dist` folder?
-> dist makes files minified for us. when bundler build the app,the build goes into a folder calld dist.
-> the ./dist folder have minified and optimised version of our source code.
-> the /dist folder also comprises all the module that may or may not be used in other system.

14.What is `browserlists`?
-> browserLists defines on which browser our application/project are supported,means make our code compayible for a lot of browsers.

15.what is `^` - caret and `~` - tilda ?
-> ^ is used when we want to allow update to the most recent minor version but prevents breaking chnages.
react:^16.8.0 - it allow update 16.9.0 or 16.10.0 but not 17.0.0 or higher
-> ~ is used when we want to allow update to most recent patch version but prevent minor version changes.
react:^16.8.0 - it allows update for only 16.8.1 or 16.8.2 but won't be update 16.9.0
so ~ is a safe option.
